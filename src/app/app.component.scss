@import '~bootstrap/scss/_functions';
@import '~bootstrap/scss/_mixins';
@import '~bootstrap/scss/_variables';


// 変数
// --------------------------------------------------------------------------------

$theme-bg-colour: #1c002c;
$theme-colour: #fff;

$header-height: 60px;
$menu-width: 270px;

$menu-transition: .3s;


// 全体
// --------------------------------------------------------------------------------

a {
  color: darken($theme-colour, 12%);
  text-decoration: none;
  
  &:hover {
    color: $theme-colour;
  }
}


// ヘッダ
// --------------------------------------------------------------------------------

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: $header-height;
  background: $theme-bg-colour;
  z-index: 99999;
  
  // ハンバーガメニュー
  .hamburger {
    position: absolute;
    width: auto;
    top: 0;
    left: 0;
    height: $header-height;
    padding: 0 15px;
    border: 0;
    background: $theme-bg-colour;
    overflow: hidden;
    opacity: 1;
    transition: opacity $menu-transition, visibility $menu-transition;
    outline: 0;
    cursor: pointer;
    
    // 幅が広い時は非表示にする
    @include media-breakpoint-up(lg) {
      & {
        opacity: 0;
        visibility: hidden;
      }
    }
    
    &:hover,
    &:focus,
    &:active {
      .icon-bar {
        background: $theme-colour;
      }
    }
    
    .icon-bar {
      display: block;
      width: 22px;
      height: 2px;
      border-radius: 1px;
      background: darken($theme-colour, 12%);
    }
    
    .icon-bar + .icon-bar {
      margin-top: 4px;
    }
  }
  
  .title {
    margin: 0;
    text-align: center;
    
    a {
      font-size: $font-size-lg;
      font-weight: bold;
      line-height: $header-height;
    }
  }
  
  // GitHub アイコン
  .gh {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    padding: 0 15px;
    font-size: 48px;
    line-height: $header-height;
  }
}


// メニュー
// --------------------------------------------------------------------------------

.menu {
  position: fixed;
  top: $header-height;
  left: -$menu-width;  // メニューの幅の分だけネガティブ指定して画面外に出しておく
  width: $menu-width;
  height: calc( 100% - #{$header-height} );  // SCSS 変数と CSS3 calc() を併用する
  overflow-y: auto;
  background: $theme-bg-colour;
  transition: left $menu-transition;
  z-index: 99999;
  
  ul {
    margin: 15px 0;
    padding: 0;
    list-style: none;
    color: darken($theme-colour, 20%);
    font-size: $font-size-lg;
    font-weight: bold;
    
    ul {
      margin: 0;
      padding-left: 15px;
    }
    
    span {
      display: block;
      padding: 0 15px 5px;
      color: darken($theme-colour, 35%);
    }
    
    a {
      display: block;
      padding: 0 15px 15px;
    }
    
    .active a,
    a:hover {
      color: $theme-colour;
      text-shadow: rgba(255, 255, 255, .4) 0 0 16px;
    }
  }
}

// ハンバーガメニューが表示される時はメニューを閉じておく
@include media-breakpoint-up(lg) {
  .menu {
    left: 0;
  }
}

// 本コンポーネントより親の要素 (body 要素) に .show-menu が付与された時にメニューを表示するようにする
:host-context(.show-menu) .menu {
  left: 0;
}


// コンテンツ
// --------------------------------------------------------------------------------

.contents {
  margin-left: 0;  // メニュー非表示時のコンテンツ表示状態にする
  padding: calc( #{$header-height} + 15px ) 15px 15px;
  transition: margin-left $menu-transition;
  z-index: 1;
  
  // メニュー表示時はメニュー幅分の余白を開ける
  @include media-breakpoint-up(lg) {
    & {
      margin-left: $menu-width;
    }
  }
}

// 画面幅が狭い時にメニューを表示したらスライドさせる
// スライドさせるとコンテンツ幅が狭くなりすぎる場合は隠れるようにする
@include media-breakpoint-up(sm) {
  :host-context(.show-menu) .contents {
    margin-left: $menu-width;
  }
}
